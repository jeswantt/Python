class MyHashMap(object):

    def __init__(self):
        self.capacity = 1000
        self.table = [None] * self.capacity

    def _hash(self, key):
        return key % self.capacity

    def put(self, key, value):
        idx = self._hash(key)
        if self.table[idx] is None:
            self.table[idx] = []
        for i, kv in enumerate(self.table[idx]):
            if kv[0] == key:
                self.table[idx][i] = (key, value)
                return
        self.table[idx].append((key, value))

    def get(self, key):
        idx = self._hash(key)
        if self.table[idx] is not None:
            for kv in self.table[idx]:
                if kv[0] == key:
                    return kv[1]
        return -1

    def remove(self, key):
        idx = self._hash(key)
        if self.table[idx] is not None:
            for i, kv in enumerate(self.table[idx]):
                if kv[0] == key:
                    self.table[idx].pop(i)
                    return
